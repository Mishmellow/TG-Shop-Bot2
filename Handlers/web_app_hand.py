from aiogram import Router, F
from aiogram.types import Message
import json
from data_base import add_order

router = Router()


@router.message(F.web_app_data)
async def handle_webapp_data(message: Message):
    print(f"üéØ WebApp –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã: {message.web_app_data.data}")

    try:
        data = json.loads(message.web_app_data.data)
        print(f"üì¶ –î–∞–Ω–Ω—ã–µ –∏–∑ WebApp: {data}")

        product = data.get('product', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä')
        price = data.get('price', 0)

        print(f"üõç –¢–æ–≤–∞—Ä: {product}, –¶–µ–Ω–∞: {price}")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑
        add_order(
            user_id=message.from_user.id,
            product=product,
            quantity=1,
            address='–î–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ WebApp'
        )

        await message.answer(
            f"üéâ –ó–∞–∫–∞–∑ '{product}' –∑–∞ {price}‚Ç¥ –ø—Ä–∏–Ω—è—Ç!\n"
            f"üì¶ –û–∂–∏–¥–∞–π—Ç–µ –¥–æ—Å—Ç–∞–≤–∫—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É."
        )

    except json.JSONDecodeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞")
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞")